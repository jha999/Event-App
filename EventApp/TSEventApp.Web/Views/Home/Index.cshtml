@model IEnumerable<EventViewModel>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> _signInManager
@inject UserManager<IdentityUser> _userManager
@{
    ViewData["Title"] = "Home";
}
@{
    var user = await _userManager.GetUserAsync(User);
    var email = user != null ? user.Email : "";

}
<div class="home-container p-4">
    <div class="row">
        <h1 class="text-center">Welcome @(_signInManager.IsSignedIn(User)==true ? User.Identity.Name : "MVC Project")</h1>
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="past-tab" data-bs-toggle="tab" data-bs-target="#past" type="button" role="tab" aria-controls="past" aria-selected="true">Past</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="upcoming-tab" data-bs-toggle="tab" data-bs-target="#upcoming" type="button" role="tab" aria-controls="upcoming" aria-selected="false">Upcoming</button>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="past" role="tabpanel" aria-labelledby="past-tab">
                <ul class="list-group pt-4">
                    @{ int eventIterator = 0;}
                    @foreach (var bookEvent in Model)
                    {
                        @if (bookEvent.Date < DateTime.Now && (email != "myadmin@bookevents.com"?bookEvent.Type.Equals("Public"):true))
                        {
                            ViewData["PositionFromStart"] = ++eventIterator;
                            <partial name="_EventDetailsIndexPage" model="@bookEvent" view-data="ViewData" />
                        }

                    }
                </ul>
            </div>
            <div class="tab-pane fade" id="upcoming" role="tabpanel" aria-labelledby="upcoming-tab">
                <ul class="list-group pt-4">
                    @{ eventIterator = 0;}
                    @foreach (var bookEvent in Model)
                    {
                        @if (bookEvent.Date > DateTime.Now && (email != "myadmin@bookevents.com" ? bookEvent.Type.Equals("Public") : true))
                        {
                            ViewData["PositionFromStart"] = ++eventIterator;
                            <partial name="_EventDetailsIndexPage" model="@bookEvent" view-data="ViewData" />
                        }

                    }
                </ul>
            </div>
        </div>

    </div>
</div>

